pipeline {
    agent any
    parameters {
        string(defaultValue: 'Branch_HelloWorld_Feature', description: 'Which branch to build?', name: 'BRANCH_NAME')
    }

    stages {
        stage('Checkout'){
            steps{
                        echo 'Removing original source code for internal - /opt/devops/pullrequest/c'
                        sh 'rm -rf /opt/devops/pullrequest/c'
                        ws('/opt/devops/pullrequest/c'){
                            echo "Workspace dir is ${pwd()}"
                            checkout([$class: 'GitSCM', branches: [[name: BRANCH_NAME ]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CleanBeforeCheckout'], [$class: 'PruneStaleBranch'], [$class: 'RelativeTargetDirectory', relativeTargetDir: 'helloworld']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/art-niu/helloworld.git']]])
                            
                        }
           }
        }

        stage('Build') {
            agent {
        	docker { 
                  image 'arthurniu/gcc-ubuntu:2.0' 
                  args '-v /opt/devops:/opt/devops -w /opt/devops/pullrequest/c'
                  reuseNode true
                }
    	    }
            steps {
                sh 'cd /opt/devops/pullrequest/c/helloworld/c/HelloWorld; make'
            }
        }

        stage('Test') {
            steps {
                sh 'gcc -v'
            }
        }
    }
    post {
        always {
        	echo 'Artifacts @ jenkins:/opt/artifacts/${params.BRANCH_NAME}'
        	echo 'Logs @ jenkins:/opt/buildSpace/logs'
        	echo 'Source code @ jenkins:/opt/devops'
        	echo 'Workspace @ jenkins:/opt/workSpace'
        }
        success {
            echo " Build Success"
            /*
            emailext (
                subject: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: '${SCRIPT, template="jenkins-matrix-email-html.template"}',
                recipientProviders: [[$class: 'CulpritsRecipientProvider'],[$class: 'RequesterRecipientProvider'], [$class: 'DevelopersRecipientProvider']],
                to:'fei@hotmail.com ouyuan@gmail.com',
                mimeType: 'text/html'
            )
            */
        }
        failure {
            echo " Build Failed"
            /*
            emailext (
                subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: '${SCRIPT, template="jenkins-matrix-email-html.template"}' ,
                recipientProviders: [[$class: 'CulpritsRecipientProvider'],[$class: 'RequesterRecipientProvider'], [$class: 'DevelopersRecipientProvider']],
                to:'fei@hotmail.com ouyuan@gmail.com',
                attachLog: true, 
                compressLog:false,
                mimeType: 'text/html'
            )
            */
        }
    }    
}
